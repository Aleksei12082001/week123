#include <iostream>
#include <limits>

using namespace std;

int main() {
    // Целые числа
    cout << "int: min = " << numeric_limits<int>::min() << ", max = " << numeric_limits<int>::max() << endl;
    // int обычно занимает 4 байта (32 бита).
    // Из 32 бит 1 бит используется для знака, что оставляет 31 бит для представления значения.
    // Минимальное значение = -2^(31) = -2147483648
    // Максимальное значение = 2^(31) - 1 = 2147483647

    cout << "short: min = " << numeric_limits<short>::min() << ", max = " << numeric_limits<short>::max() << endl;
     // short обычно занимает 2 байта (16 бит).
    // Из 16 бит 1 бит используется для знака, что оставляет 15 бит для представления значения.
    // Минимальное значение = -2^(15) = -32768
    // Максимальное значение = 2^(15) - 1 = 32767

    cout << "long: min = " << numeric_limits<long>::min() << ", max = " << numeric_limits<long>::max() << endl;
    // long может занимать 4 или 8 байт в зависимости от платформы.
    // На 32-битных системах: 4 байта (32 бита) -> min = -2^(31), max = 2^(31) - 1
    // На 64-битных системах: 8 байт (64 бита) -> min = -2^(63), max = 2^(63) - 1


    cout << "long long: min = " << numeric_limits<long long>::min() << ", max = " << numeric_limits<long long>::max() << endl;
    // long long занимает 8 байт (64 бита).
    // Все 64 бита используются для представления значения, где 1 бит используется для знака.
    // Минимальное значение = -2^(63) = -9223372036854775808
    // Максимальное значение = 2^(63) - 1 = 9223372036854775807

    // Числа с плавающей запятой
    cout << "float: min = " << numeric_limits<float>::lowest() << ", max = " << numeric_limits<float>::max() << endl;
    // float занимает 4 байта (32 бита).
    // Использует 1 бит для знака, 8 бит для экспоненты и 23 бита для мантиссы.
    // Максимальное значение = приблизительно 3.4 × 10^38 (ограничено размером экспоненты)
    // Минимальное значение (наименьшее не нулевое) = приблизительно 1.2 × 10^-38 (ограничено размером мантиссы)

    cout << "double: min = " << numeric_limits<double>::lowest() << ", max = " << numeric_limits<double>::max() << endl;
    // double занимает 8 байт (64 бита).
    // Использует 1 бит для знака, 11 бит для экспоненты и 52 бита для мантиссы.
    // Максимальное значение = приблизительно 1.7 × 10^308
    // Минимальное значение (наименьшее не нулевое) = приблизительно 2.2 × 10^-308

    cout << "long double: min = " << numeric_limits<long double>::lowest() << ", max = " << numeric_limits<long double>::max() << endl;
    // long double может занимать 8, 12 или 16 байт в зависимости от платформы.
    // Максимальное значение может быть еще больше, чем у double, но зависит от реализации и используемого стандарта.

    return 0;
}
